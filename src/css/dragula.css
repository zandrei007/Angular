/* dragula-specific example page styles */

.wrapper {
    display: table;
}

.container {
    display: table-cell;
    background-color: rgba(255, 255, 255, 0.2);
    width: 50%;
}

.container:nth-child(odd) {
    background-color: rgba(0, 0, 0, 0.2);
}


/*
 * note that styling gu-mirror directly is a bad practice because it's too generic.
 * you're better off giving the draggable elements a unique class and styling that directly!
 */

.container div,
.gu-mirror {
    margin: 10px;
    padding: 10px;
    background-color: rgba(0, 0, 0, 0.2);
    transition: opacity 0.4s ease-in-out;
}

.container div {
    cursor: move;
    cursor: grab;
    cursor: -moz-grab;
    cursor: -webkit-grab;
}

.gu-mirror {
    cursor: grabbing;
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
}

.container .ex-moved {
    background-color: #e74c3c;
}

.container.ex-over {
    background-color: rgba(255, 255, 255, 0.3);
}

.handle {
    padding: 0 5px;
    margin-right: 5px;
    background-color: rgba(0, 0, 0, 0.4);
    cursor: move;
}

nested-repeat-example .container span {
    display: block;
    padding: 8px;
}

.gu-mirror {
    position: fixed!important;
    margin: 0!important;
    z-index: 9999!important;
    opacity: .8;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
    filter: alpha(opacity=80)
}

.gu-hide {
    display: none!important
}

.gu-unselectable {
    -webkit-user-select: none!important;
    -moz-user-select: none!important;
    -ms-user-select: none!important;
    user-select: none!important
}

.gu-transit {
    opacity: .2;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter: alpha(opacity=20)
}